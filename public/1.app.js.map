{"version":3,"sources":["webpack:///./src/form-elements-permission.jsx"],"names":["FormElementsPermission","props","useState","element","setElement","data","setData","dirty","setDirty","signPermissionData","setSignPermissionData","useEffect","http","request","url","method","then","response","err","text","manualEditPermissionModeOff","map","item","i","attributes","name","defaultProps","className"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAW;EACxC,gBAA8BC,sDAAQ,CAACD,KAAK,CAACE,OAAP,CAAtC;EAAA;EAAA,IAAOA,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAwBF,sDAAQ,CAACD,KAAK,CAACI,IAAP,CAAhC;EAAA;EAAA,IAAOA,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA0BJ,sDAAQ,CAAC,KAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAoDN,sDAAQ,CAAC,IAAD,CAA5D;EAAA;EAAA,IAAOO,kBAAP;EAAA,IAA2BC,qBAA3B;;EAEAC,uDAAS,CAAC,YAAM;IACd,IAAI,CAACF,kBAAL,EAAyB;MACvBG,4DAAI,GACDC,OADH,CACW;QACPC,GAAG,qBADI;QAEPC,MAAM,EAAE;MAFD,CADX,EAKGC,IALH,CAKQ,UAACC,QAAD,EAAc;QAClBP,qBAAqB,CAACO,QAAQ,CAACZ,IAAT,CAAcA,IAAf,CAArB;MACD,CAPH,WAQS,UAACa,GAAD,EAAS;QACdR,qBAAqB,CAAC,IAAD,CAArB;MACD,CAVH,aAWW,YAAM,CAAE,CAXnB;IAYD;EACF,CAfQ,EAeN,EAfM,CAAT,CANwC,CAuBxC;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIH,KAAJ,EAAW;IACTN,KAAK,CAACE,OAAN,CAAcI,KAAd,GAAsB,IAAtB;EACD;;EAED,oBACE,qFACE;IAAK,SAAS,EAAC;EAAf,EADF,eAEE,2DAAC,4DAAD;IACE,OAAO,EAAE,IADX;IAEE,WAAW,EAAE,KAFf;IAGE,kBAAkB,EAAE,IAHtB;IAIE,eAAe,EAAE,IAJnB;IAKE,SAAS,EAAE,IALb;IAME,KAAK,EAAEN,KAAK,CAACE,OAAN,CAAcgB,IANvB;IAOE,SAAS,EAAC,wBAPZ;IAQE,KAAK,EAAE,GART;IASE,MAAM,EAAE,GATV;IAUE,QAAQ,EAAElB,KAAK,CAACmB;EAVlB,gBAYE,2DAAC,+DAAD;IAAU,EAAE,EAAC,QAAb;IAAsB,EAAE,EAAC,QAAzB;IAAkC,SAAS,EAAC;EAA5C,EAZF,EAaGX,kBAbH,aAaGA,kBAbH,uBAaGA,kBAAkB,CAAEY,GAApB,CAAwB,UAACC,IAAD,EAAOC,CAAP,EAAa;IACpC,oBACE;MAAI,SAAS,EAAC,iBAAd;MAAgC,GAAG,gBAASA,CAAT;IAAnC,GACGD,IAAI,CAACE,UAAL,CAAgBC,IADnB,CADF;EAKD,CANA,CAbH,CAFF,CADF;AA0BD,CAvGD;;AAyGAzB,sBAAsB,CAAC0B,YAAvB,GAAsC;EAAEC,SAAS,EAAE;AAAb,CAAtC;AACe3B,qFAAf,E","file":"1.app.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ID from './UUID';\nimport { Popup, Position } from 'devextreme-react/popup';\nimport http from './axiosClient';\n\nconst FormElementsPermission = (props) => {\n  const [element, setElement] = useState(props.element);\n  const [data, setData] = useState(props.data);\n  const [dirty, setDirty] = useState(false);\n  const [signPermissionData, setSignPermissionData] = useState(null);\n\n  useEffect(() => {\n    if (!signPermissionData) {\n      http()\n        .request({\n          url: `/sign-permissions`,\n          method: 'get',\n        })\n        .then((response) => {\n          setSignPermissionData(response.data.data);\n        })\n        .catch((err) => {\n          setSignPermissionData(null);\n        })\n        .finally(() => {});\n    }\n  }, []);\n\n  // const editElementProp = (elemProperty, targProperty, e) => {\n  //   // elemProperty could be content or label\n  //   // targProperty could be value or checked\n  //   const this_element = element;\n  //   this_element[elemProperty] = e.target[targProperty];\n\n  //   setElement(this_element);\n  //   setDirty(true);\n  //   if (targProperty === 'checked') this.updateElement();\n  // };\n\n  // const updateElement = () => {\n  //   const this_element = element;\n  //   // to prevent ajax calls with no change\n  //   if (dirty) {\n  //     props.updateElement.call(props.preview, this_element);\n  //     setDirty(false);\n  //   }\n  // };\n\n  // convertFromHTML(content) {\n  //   const newContent = convertFromHTML(content);\n  //   if (!newContent.contentBlocks || !newContent.contentBlocks.length) {\n  //     // to prevent crash when no contents in editor\n  //     return EditorState.createEmpty();\n  //   }\n  //   const contentState = ContentState.createFromBlockArray(newContent);\n  //   return EditorState.createWithContent(contentState);\n  // }\n\n  // addOptions() {\n  //   const optionsApiUrl = document.getElementById('optionsApiUrl').value;\n  //   if (optionsApiUrl) {\n  //     get(optionsApiUrl).then((data) => {\n  //       this.props.element.options = [];\n  //       const { options } = this.props.element;\n  //       data.forEach((x) => {\n  //         // eslint-disable-next-line no-param-reassign\n  //         x.key = ID.uuid();\n  //         options.push(x);\n  //       });\n  //       const this_element = this.state.element;\n  //       this.setState({\n  //         element: this_element,\n  //         dirty: true,\n  //       });\n  //     });\n  //   }\n  // }\n\n  if (dirty) {\n    props.element.dirty = true;\n  }\n\n  return (\n    <div>\n      <div className=\"edit-permission-panel\"></div>\n      <Popup\n        visible={true}\n        dragEnabled={false}\n        hideOnOutsideClick={true}\n        showCloseButton={true}\n        showTitle={true}\n        title={props.element.text}\n        container=\".edit-permission-panel\"\n        width={600}\n        height={600}\n        onHiding={props.manualEditPermissionModeOff}\n      >\n        <Position at=\"center\" my=\"center\" collision=\"fit\" />\n        {signPermissionData?.map((item, i) => {\n          return (\n            <h5 className=\"UsersPremission\" key={`sign${i}`}>\n              {item.attributes.name}\n            </h5>\n          );\n        })}\n      </Popup>\n    </div>\n  );\n};\n\nFormElementsPermission.defaultProps = { className: 'edit-element-fields' };\nexport default FormElementsPermission;\n"],"sourceRoot":""}